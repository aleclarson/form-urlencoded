// Generated by CoffeeScript 1.12.4
var bracketRE, isObject, parseKeys, setValue;

isObject = require("isObject");

bracketRE = /[^\[\]]+/g;

module.exports = function(str) {
  var i, key, len, pair, pairs, value, values;
  values = {};
  pairs = str.split("&");
  for (i = 0, len = pairs.length; i < len; i++) {
    pair = pairs[i];
    pair = pair.split("=");
    key = decodeURIComponent(pair[0]);
    value = decodeURIComponent(pair[1]);
    if (~key.indexOf("[")) {
      setValue(values, parseKeys(key), value);
    } else {
      values[key] = value;
    }
  }
  return values;
};

parseKeys = function(key) {
  var keys, match;
  keys = [];
  bracketRE.lastIndex = 0;
  while (match = bracketRE.exec(key)) {
    keys.push(match[0]);
  }
  return keys;
};

setValue = function(values, keys, value) {
  var ancestor, index, key, lastIndex, parent;
  parent = values;
  index = -1;
  lastIndex = keys.length - 1;
  while (++index < lastIndex) {
    key = keys[index];
    parent = (ancestor = parent)[key];
    if (0 <= Number(keys[index + 1])) {
      if (!Array.isArray(parent)) {
        ancestor[key] = parent = [];
      }
    } else if (!isObject(parent)) {
      ancestor[key] = parent = {};
    }
  }
  parent[keys[index]] = value;
};
